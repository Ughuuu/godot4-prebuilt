name: "Build Godot artifacts"

on:
  workflow_dispatch:
    inputs:
      godot-version:
        description: 'Version to build (for example "4.0.1")'
        required: true

defaults:
  run:
    shell: bash

jobs:
  download-godot:
    runs-on: ubuntu-latest
    environment: Deploy
    steps:
      - uses: actions/checkout@v3

      - name: "Prepare versions"
        run: |
          version="${{ github.event.inputs.godot-version }}"
          
          # if version has already suffix (e.g. -rc1), leave as-is, but replace filePath
          if [[ $1 =~ "-" ]]; then
            filePath=$(echo "$version" | sed "s!-!/!")
          else
            filePath="$version"
            version="${version}-stable"
          fi
          
          filename=Godot_v${version}_linux.x86_64
          
          echo "GODOT4_FILE_URL=$filePath/$filename.zip" >> $GITHUB_ENV
          echo "GODOT4_BIN=godot_bin/$filename" >> $GITHUB_ENV
          echo "GODOT4_VER=$version" >> $GITHUB_ENV

#      - name: "Install LLVM"
#        if: ${{ os.runner == "macOS" }}
#        uses: KyleMayes/install-llvm-action@v1
#        with:
#          version: "10.0"
#          directory: ${{ runner.temp }}/llvm

      - name: "Download GDExtension header"
        run: |
          wget https://raw.githubusercontent.com/godotengine/godot/$GODOT4_VER/core/extension/gdextension_interface.h -P output
          echo "Output directory:"
          ls -la output

      - name: "Apply GDExtension patch"
        run: git apply res/tweak.patch -v

      - name: "Install Rust"
        run: |
          rustup toolchain install stable --profile minimal --no-self-update ${{ steps.configure.outputs.components }}
          rustup default stable
          echo RUST_VER=$(rustc --version | sed -E "s/rustc ([^ ]+?) \\(.+/\\1/") >> $GITHUB_ENV

      - name: "Setup cache for Rust ${{ env.RUST_VER }}"
        uses: Swatinem/rust-cache@v2
        with:
          # A cache key that is used instead of the automatic `job`-based key, and is stable over multiple jobs.
          # default: empty
          shared-key: "${{ env.RUST_VER }}-${{ runner.os }}"

          # An additional cache key that is added alongside the automatic `job`-based
          # cache key and can be used to further differentiate jobs.
          # default: empty
          #key: ${{ inputs.cache-key }}

          # Determines if the cache should be saved even when the workflow has failed.
          # default: "false"
          cache-on-failure: true

      - name: "Set Rust environment variables"
        run: |
          echo CARGO_TERM_COLOR=always >> $GITHUB_ENV
          echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV
          echo RUST_BACKTRACE=1 >> $GITHUB_ENV

          rustc --version --verbose

      - name: "Run Rust"
        run: |
          cd rust
          cargo build

      - name: "Download Godot ${{ env.GODOT4_VER }}"
        # for gdnative: wget --no-verbose "https://downloads.tuxfamily.org/godotengine/$filePath/Godot_v${{ inputs.godot_ver }}_linux_headless.64.zip" -O /tmp/godot.zip
        run: |          
          wget --no-verbose "https://downloads.tuxfamily.org/godotengine/$GODOT4_FILE_URL" -O ${{ runner.temp }}/godot.zip || {
            echo "::error::Godot version '$GODOT4_VER' not available online."
            exit 1
          }
          unzip -o ${{ runner.temp }}/godot.zip -d godot_bin
          echo "Godot directory:"
          ls -la godot_bin

      - name: "Check Godot version"
        run: $GODOT4_BIN --version

      - name: "Generate GDExtension API JSON"
        run: |
          cd output
          $GODOT4_BIN --dump-gdextension-interface
          echo "Output directory:"
          ls -la

